---

- name: install kvm
  apt: >
    pkg={{ item }}
    state=installed
  with_items:
   - qemu-kvm
   - libvirt-bin
   - pm-utils
   - vlan
   - virtinst
   - bridge-utils

- name: install nova-compute
  apt: >
    pkg={{ item }}
    state=installed
  with_items:
   - nova-compute-kvm
   - python-novaclient

- name: install nova-network
  apt: >
    pkg=nova-network
    state=installed
  when: network_type == "nova-network"

- name: setting kernel parameta
  template: >
    src=sysctl.conf.j2
    dest=/etc/sysctl.conf
    owner=root
    group=root
    mode=0644
    backup=yes
  notify:
    - reflect setting of kernel

- name: setting qemu config
  template: >
    src=qemu.conf.j2
    dest=/etc/libvirt/qemu.conf
    owner=root
    group=root
    mode=0600
    backup=yes
  notify:
    - restart libvirt-bin

- name: setting libvirt config
  template: >
    src={{ item.src }}
    dest={{ item.dst }}
    owner=root
    group=root
    mode=0644
    backup=yes
  with_items:
    - { src: 'libvirtd.conf.j2',    dst: '/etc/libvirt/libvirtd.conf' }
    - { src: 'libvirt-bin.conf.j2', dst: '/etc/init/libvirt-bin.conf' }
    - { src: 'libvirt-bin.j2',      dst: '/etc/default/libvirt-bin'   }
  notify:
    - restart libvirt-bin

- name: setting nova-compute config
  template: >
    src=nova-compute.conf.j2
    dest=/etc/nova/nova-compute.conf
    owner=nova
    group=nova
    mode=0600
    backup=yes
  notify:
    - restart nova-compute

- name: setting nova config for nova-network
  template: >
    src=nova.conf_nova-network
    dest=/etc/nova/nova.conf
    owner=nova
    group=nova
    mode=0640
    backup=yes
  notify:
    - restart nova-compute
    - restart nova-network
  when: network_type == "nova-network"

- name: setting nova config for neutron
  template: >
    src=nova.conf_neutron
    dest=/etc/nova/nova.conf
    owner=nova
    group=nova
    mode=0640
    backup=yes
  notify:
    - restart nova-compute
  when: network_type == "neutron-flat" or network_type == "neutron-l3"


