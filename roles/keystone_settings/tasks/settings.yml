---

- name: create service
  keystone:
    command: "ensure_service"
    service_name: "{{ item.name }}"
    service_type: "{{ item.type }}"
    description: "{{ item.description }}"
    token: "{{ admin_token }}"
    endpoint: "{{ item.os_url }}"
  with_items: services

- name: create endpoints
  keystone:
    command: "ensure_endpoint"
    region_name: "RegionOne"
    service_name: "{{ item.name }}"
    service_type: "{{ item.type }}"
    endpoint_list:
      - url: "{{ item.public_url }}"
        interface: "public"
      - url: "{{ item.internal_url }}"
        interface: "internal"
      - url: "{{ item.admin_url }}"
        interface: "admin"
    token: "{{ admin_token }}"
    endpoint: "{{ item.os_url }}"
  with_items: services

- name: create projects
  keystone:
    command: "ensure_project"
    project_name: "{{ item.name }}"
    domain_name: "Default"
    description: "{{ item.description }}"
    token: "{{ admin_token }}"
    endpoint: "{{ item.os_url }}"
  with_items: projects

- name: create users
  keystone:
    command: "ensure_user"
    user_name: "{{ item.name }}"
    project_name: "{{ item.project_name }}"
    password: "{{ item.password }}"
    token: "{{ admin_token }}"
    endpoint: "{{ item.os_url }}"
  with_items: users

- name: create role
  keystone:
    command: "ensure_role"
    role_name: "{{ item.role_name }}"
    token: "{{ admin_token }}"
    endpoint: "{{ item.os_url }}"
  with_items: users

- name: is added to the role you create a user
  keystone:
    command: "ensure_user_role"
    user_name: "{{ item.name }}"
    project_name: "{{ item.project_name }}"
    role_name: "{{ item.role_name }}"
    token: "{{ admin_token }}"
    endpoint: "{{ item.os_url }}"
  with_items: users

- name: create a user to use the openstack
  user: >
    name={{ operate_user }}
    home={{ operate_user_home }}
    password={{ operate_user_password }}
    shell=/bin/bash
    state=present
    append=yes
    groups=sudo

- name: distribute openrc for admin
  template: >
    src=admin-openrc.sh.j2
    dest={{ operate_user_home }}/admin-openrc.sh
    owner={{ operate_user }}
    group={{ operate_user }}
    mode=0600

- name: distribute openrc for generic01
  template: >
    src=generic01-openrc.sh.j2
    dest={{ operate_user_home }}/generic01-openrc.sh
    owner={{ operate_user }}
    group={{ operate_user }}
    mode=0600

