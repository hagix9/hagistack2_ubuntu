---

- name: create internal network for neutron l3
  os_network:
    cloud: "{{ generic_project01 }}"
    state: "present"
    name: "{{ item.key }}"
  with_dict: "neutron_l3_internal_networks"

- name: create internal subnet for neutron l3
  os_subnet:
    cloud: "{{ generic_project01 }}"
    state: "present"
    network_name: "{{ item.key }}"
    name: "{{ item.value.subnet_name }}"
    cidr: "{{ item.value.subnet }}"
    dns_nameservers:
      - "{{ item.value.dns1 }}"
      - "{{ item.value.dns2 }}"
    host_routes:
      - destination: "0.0.0.0/0"
        nexthop: "{{ item.value.gateway }}"
  with_dict: "neutron_l3_internal_networks"

- name: create router and add interface for internal_network
  os_router:
    cloud: "{{ generic_project01 }}"
    state: "present"
    name: "{{ router_name }}"
    interfaces:
      - "{{ item.value.subnet_name }}"
  with_dict: "neutron_l3_internal_networks"

- name: create external network for neutron l3
  os_network:
    cloud: "{{ generic_project01 }}"
    state: "present"
    name: "{{ item.key }}"
    external: "True"
  with_dict: neutron_l3_external_networks

- name: create external subnet for neutron l3
  os_subnet:
    cloud: "{{ generic_project01 }}"
    state: "present"
    network_name: "{{ item.key }}"
    name: "{{ item.value.subnet_name }}"
    cidr: "{{ item.value.subnet }}"
    allocation_pool_start: "{{ item.value.ip_pool_start }}"
    allocation_pool_end: "{{ item.value.ip_pool_end }}"
    dns_nameservers:
      - "{{ item.value.dns1 }}"
      - "{{ item.value.dns2 }}"
    host_routes:
      - destination: "0.0.0.0/0"
        nexthop: "{{ item.value.gateway }}"
    enable_dhcp: "False"
  with_dict: neutron_l3_external_networks

- name: create router gateway set for neutron l3
  os_router:
    cloud: "{{ generic_project01 }}"
    state: "present"
    name: "{{ router_name }}"
    network: "{{ item.key }}"
    external_fixed_ips:
      - subnet: "{{ item.value.subnet_name }}"
        ip: "{{ item.value.ip_pool_start }}"
  with_dict: neutron_l3_external_networks

- name: secgroup settings for ssh
  os_security_group_rule:
    cloud: "{{ generic_project01 }}"
    security_group: "default"
    protocol: "tcp"
    port_range_min: "22"
    port_range_max: "22"
    remote_ip_prefix: "0.0.0.0/0"

- name: secgroup settings for rule01
  os_security_group_rule:
    cloud: "{{ generic_project01 }}"
    security_group: "{{ item.value.name }}"
    protocol: "{{ item.value.protocol }}"
    port_range_min: "{{ item.value.from_port }}"
    port_range_max: "{{ item.value.to_port }}"
    remote_ip_prefix: "{{ item.value.cidr }}"
  with_dict: secgroup_rules

